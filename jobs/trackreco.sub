# nexus.sub

# The job title here.
jobname=nudobe

# BSM Models
MODEL=mbb
#MODEL=Leptoquark

# Nuclear Matrix Elements
# NME=SM
NME=IBM2
# NME=QRPA

# PRESSs
PRESS=1bar
# PRESS=3bar
# PRESS=5bar
# PRESS=7bar
# PRESS=10bar
# PRESS=15bar

BINNING=1mm_smear
#BINNING=2mm_smear
#BINNING=4mm_smear
#BINNING=10mm_smear
#BINNING=nexus

N_JOBS=1000

OSDF_LOCATION=osdf:///ospool/ap40/data/krishan.mistry
HOME_LOCATION=/home/krishan.mistry/code/NEXT_nudobe

# newjobid = $(Process) + 100
#NewProcess = $INT(newjobid, %d)
NewProcess = $(Process)

executable = RunReconstruction_condor.sh
arguments = $(NewProcess) $(jobname) $(MODEL) $(NME) $(PRESS) $(BINNING) $(N_JOBS)

# Specify the name of the log, standard error, and standard output (or "screen output") files. Wherever you see $(Cluster), HTCondor will insert the 
#  queue number assigned to this set of jobs at the time of submission.
log    = logs/$(MODEL)/$(NME)/$(PRESS)/trackreco/$(BINNING)/jobid$(NewProcess)/$(Cluster)_$(NewProcess).log
error  = logs/$(MODEL)/$(NME)/$(PRESS)/trackreco/$(BINNING)/jobid$(NewProcess)/$(Cluster)_$(NewProcess).err
output = logs/$(MODEL)/$(NME)/$(PRESS)/trackreco/$(BINNING)/jobid$(NewProcess)/$(Cluster)_$(NewProcess).out

# Transfer input files
transfer_input_files = $(OSDF_LOCATION)/job/nudobe/$(MODEL)/$(NME)/$(PRESS)/$(MODEL)_$(BINNING).h5,$(OSDF_LOCATION)/job/nudobe/$(MODEL)/$(NME)/$(PRESS)/$(MODEL)_events.txt,$(HOME_LOCATION)/workdir/TrackReconstruction_functions.py,$(HOME_LOCATION)/workdir/TrackReconstruction.py

# Transfer output files
transfer_output_remaps = "$(MODEL)_$(NME)_$(PRESS)_$(BINNING)_reco.txt = $(OSDF_LOCATION)/job/$(jobname)/$(MODEL)/$(NME)/$(PRESS)/reco/$(BINNING)/$(MODEL)_$(NME)_$(PRESS)_$(Cluster)_$(NewProcess).txt"

# Specify Job duration category as "Medium" (expected runtime <10 hr) or "Long" (expected runtime <20 hr). 
+JobDurationCategory = "Medium"

# Use a singularity image to submit the file. The image should be stored in the protected area of your workspace
+SingularityImage = "$(OSDF_LOCATION)/containers/docker_nexus_ATPC_nudobe3.sif"


# Tell HTCondor requirements (e.g., operating system) your job needs, 
# what amount of compute resources each job will need on the computer where it runs.
requirements = (Arch == "X86_64")
request_cpus = 1
request_memory = 4GB
request_disk = 5GB

# If submitting more than 10k jobs use this statement
# max_idle = 2000

# Job resubmission criteria
# Set a periodic release condition that will resubmit the job if the exit code is non-zero.
periodic_release = (ExitBySignal == False) && (ExitCode != 0) && (NumJobStarts < 2)

# Optionally, specify that the job should be removed after 3 failed attempts
on_exit_remove = (ExitBySignal == False) && (ExitCode == 0) || (NumJobStarts >= 2)


# Tell HTCondor the number of instances to run:
queue $(N_JOBS)